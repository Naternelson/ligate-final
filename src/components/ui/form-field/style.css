input {
  border-style: none;
  outline: transparent;
  background-color: inherit;
  color: inherit;
  transition: color var(--standard-time) ease;
}

input::placeholder {
  color: inherit;
  filter: opacity(0.5);
}

.form-group .input-group {
  position: relative;
  transition: border-color var(--standard-time) ease;
}

.form-group.standard {
  color: rgb(100, 100, 100);
}

.form-group.standard .input-group {
  border-bottom-color: rgb(200, 200, 200);
  border-bottom-width: 1px;
  border-bottom-style: solid;
  padding: 0.3rem 0.5rem;
  min-height: 2rem;
  box-sizing: border-box;
  color: inherit;
}

@keyframes shake {
  0% {
    transform: translateX(0);
  }
  16% {
    transform: translate(10px);
  }
  28% {
    transform: translate(-10px);
  }
  44% {
    transform: translate(5px);
  }
  59% {
    transform: translate(-5px);
  }
  73% {
    transform: translate(2px);
  }
  88% {
    transform: translate(-2px);
  }
  100% {
    transform: translateX(0);
  }
}

.form-group.standard.error .input-group {
  border-color: var(--error-color);
  color: var(--error-color);
  animation: shake 500ms ease-out;
}
.form-group.standard.error .input-group::before {
  content: "";
  border-radius: 5px 5px 0px 0px;
  position: absolute;
  pointer-events: none;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--error-color);
  filter: opacity(0.1);
}

.form-group.standard label {
  --size: 0.8rem;
  --half-size: calc(var(--size) / 2);
  position: absolute;
  font-size: var(--size);
  pointer-events: none;
  text-transform: uppercase;
  top: calc(50% - var(--half-size, 0.5rem));
  transition-property: top font-size;
  transition-duration: var(--standard-time);
  transition-timing-function: ease;
}

.form-group.standard:focus-within, .form-group.standard .input-group:focus-within{
  color: var(--primary-color);  
  border-color: var(--primary-color);
}
input:focus{
    color: black
}

.form-group.standard:focus-within label,
.form-group.standard.has-value label {
  --focus-size: calc(var(--size) * 0.7);
  color: blue;
  top: calc(var(--focus-size) * -1.25);
  font-size: var(--focus-size);
}
.form-group.standard:focus-within label,
.form-group.standard.has-value label {
  color: inherit;
}

.form-group.standard .helper-text {
  font-size: 0.7rem;
  padding: 0rem 0.5rem;
  filter: opacity(0.8);
  color: inherit;
}
.form-group.standard.error .helper-text {
  color: var(--error-color);
}

@keyframes scale {
    0% {
        transform: perspective(300px) translateZ(0px) ;
        transform: scale(1);
        filter: brightness(1);
    }
    20%{
        transform: perspective(300px) translateZ(5px);
        filter: brightness(1.3);
    }
    100% {
        transform: perspective(300px) translateZ(0px);
        filter: brightness(1);
    }
}


.form-group.standard.success, .form-group.standard.standard.success .input-group  {
    
    border-color: var(--success-color);
    color: var(--success-color);
}
.form-group.standard.success {
    animation: scale 600ms ease both;
}

.form-group.standard.success .input-group::before {
  content: "";
  border-radius: 5px 5px 0px 0px;
  position: absolute;
  pointer-events: none;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--success-color);
  filter: opacity(0.1);
}